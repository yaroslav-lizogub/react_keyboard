{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyup","event","String","key","setState","document","addEventListener","this","window","removeEventListener","message","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,IAAMF,EAAqC,MAAvBG,OAAOD,EAAME,KAC7B,QACAF,EAAME,IAEV,EAAKC,SAAS,CAAEL,gBAlBpB,uDAKE,WACEM,SAASC,iBAAiB,QAASC,KAAKP,eAN5C,kCASE,WACEQ,OAAOC,oBAAoB,QAASF,KAAKP,eAV7C,oBAqBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WACFW,EAAWX,EAAU,mCACKA,EADL,KAEvB,0BAEJ,OACE,qBAAKY,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA8BD,UA7BtC,GAAyBE,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.6d1178c5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    const pressedKey = (String(event.key)) === ' '\n      ? 'Space'\n      : event.key;\n\n    this.setState({ pressedKey });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    const message = (pressedKey\n      ? `The last pressed key is [${pressedKey}]`\n      : 'Nothing was pressed yet');\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{ message }</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}