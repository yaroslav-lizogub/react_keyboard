{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyup","event","setState","key","document","addEventListener","this","window","removeEventListener","message","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEO,OAAOC,oBAAoB,QAASF,KAAKN,eAV7C,oBAiBE,WACE,IACMS,EADiBH,KAAKR,MAApBC,WACmB,mCACKO,KAAKR,MAAMC,WADhB,KAEvB,0BAEJ,OACE,qBAAKW,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA8BD,UAzBtC,GAAyBE,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.770c6577.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    const message = (pressedKey\n      ? `The last pressed key is [${this.state.pressedKey}]`\n      : 'Nothing was pressed yet');\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{ message }</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}